1) Take a *goal*
2) Store the information
3) Access and show that information in some intervals
4) After deadline reached: repeat

from discord.ext import commands   # for using commands.Bot() instead of discord.Client()

load_dotenv()  # for parsing the .env file

TOKEN = getenv('TOKEN')  # Get TOKEN (as a string)

bot = commands.Bot(command_prefix='!')  # connection to discord

Class discord.ext.commands.Bot() is a subclass of discord.Client()

bot.user is the "bot"

bot.change_presence(activity=discord.Game("!help"))  # will display as "playing !help"

'await' is to stop the async flow of the funct to make it do what you want it to do in the meantime

message.author.mention mentions the author of the message

'ctx' has all the information about the message/command a user sends

@bot.command() is used to register a command

async def echo(ctx, *, content:str):  # '*' represents all arguements belonging to 'content' as a str

mydb.commit()  # for the changes to take place